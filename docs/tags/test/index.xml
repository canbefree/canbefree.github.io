<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>test on My New Hugo Site</title>
    <link>http://example.org/tags/test/</link>
    <description>Recent content in test on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 01 Sep 2021 22:12:51 +0800</lastBuildDate><atom:link href="http://example.org/tags/test/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ginkgo</title>
      <link>http://example.org/posts/ginkgo/</link>
      <pubDate>Wed, 01 Sep 2021 22:12:51 +0800</pubDate>
      
      <guid>http://example.org/posts/ginkgo/</guid>
      <description>TDD BDD ginkgo 基础用法 HOOKS BeforeSuite 和 AfterSuite beforeeach JustBeforeEach Describe, Context It and Specs by 跳过代码 Focused Parallel Specs 避免污染测试 异步测试 Benchmark Tests TDD BDD 测试驱动开发 (TDD)： 敏捷开发，测试先行；
行为驱动开发: 帮助开发人员design软件，换言之，BDD 展开来讲可以当作一个设计文档来阅读 （适合DDD领域驱动）
ginkgo 一个BDD框架
基础用法 ginkgo bootstrap // 初始化套件
ginkgo generate demo //生成一个测试
HOOKS BeforeSuite 和 AfterSuite func TestV1(t *testing.T) { RegisterFailHandler(Fail) RunSpecs(t, &amp;#34;V1 Suite&amp;#34;) } var _ = BeforeSuite(func() { // 可以用来初始化DB fmt.Println(&amp;#34;hello,world!&amp;#34;) }) var _ = AfterSuite(func() { }) Both BeforeSuite and AfterSuite can be run asynchronously by passing a function that takes a Done parameter.</description>
    </item>
    
  </channel>
</rss>
